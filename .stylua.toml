#				Default
#----------------------------------------------------------------------------------------------------------------------------------------------------------------
#column_width			120			Approximate line length for printing. Used as a guide for line
#							wrapping - this is not a hard requirement: lines may fall under
#							or over the limit.
#line_endings			Unix			Line endings type. Possible options: Unix (LF) or Windows (CRLF)
#indent_type			Tabs			Indent type. Possible options: Tabs or Spaces
#indent_width			4			Character size of single indentation. If indent_type is set to
#							Tabs, this option is used as a heuristic to determine column
#							width only.
#quote_style			AutoPreferDouble	Quote style for string literals. Possible options:
#							AutoPreferDouble, AutoPreferSingle, ForceDouble, ForceSingle.
#							AutoPrefer styles will prefer the specified quote style, but
#							fall back to the alternative if it has fewer string escapes.
#							Force styles always use the specified style regardless of
#							escapes.
#call_parentheses		Always			Whether parentheses should be applied on function calls with
#							a single string/table argument. Possible options: Always,
#							NoSingleString, NoSingleTable, None. Always applies parentheses
#							in all cases. NoSingleString omits parentheses on calls with
#							a single string argument. Similarly, NoSingleTable omits
#							parentheses on calls with a single table argument. None omits
#							parentheses in both cases. Note: parentheses are still kept in
#							situations where removal can lead to obscurity (e.g. foo
#							"bar".setup -> foo("bar").setup, since the index is on the call
#							result, not the string).
#collapse_simple_statement	Never			Specify whether to collapse simple statements. Possible options:
#							Never, FunctionOnly, ConditionalOnly, or Always

column_width = 80
line_endings = "Unix"
indent_type = "Spaces"
indent_width = 2
quote_style = "AutoPreferSingle"
call_parentheses = "Always"
collapse_simple_statement = "Never"
